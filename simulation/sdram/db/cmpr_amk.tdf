--lpm_compare CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_PIPELINE=0 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=32 ONE_INPUT_IS_CONSTANT="NO" aeb dataa datab CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48
--VERSION_BEGIN 18.1 cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_compare 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = 
SUBDESIGN cmpr_amk
( 
	aeb	:	output;
	dataa[31..0]	:	input;
	datab[31..0]	:	input;
) 
VARIABLE 
	aeb_result_wire[0..0]	: WIRE;
	aneb_result_wire[0..0]	: WIRE;
	data_wire[83..0]	: WIRE;
	eq_wire	: WIRE;

BEGIN 
	aeb = eq_wire;
	aeb_result_wire[] = (! aneb_result_wire[]);
	aneb_result_wire[] = (((data_wire[0..0] # data_wire[1..1]) # data_wire[2..2]) # data_wire[3..3]);
	data_wire[] = ( datab[31..31], dataa[31..31], datab[30..30], dataa[30..30], datab[29..29], dataa[29..29], datab[28..28], dataa[28..28], datab[27..27], dataa[27..27], datab[26..26], dataa[26..26], datab[25..25], dataa[25..25], datab[24..24], dataa[24..24], datab[23..23], dataa[23..23], datab[22..22], dataa[22..22], datab[21..21], dataa[21..21], datab[20..20], dataa[20..20], datab[19..19], dataa[19..19], datab[18..18], dataa[18..18], datab[17..17], dataa[17..17], datab[16..16], dataa[16..16], datab[15..15], dataa[15..15], datab[14..14], dataa[14..14], datab[13..13], dataa[13..13], datab[12..12], dataa[12..12], datab[11..11], dataa[11..11], datab[10..10], dataa[10..10], datab[9..9], dataa[9..9], datab[8..8], dataa[8..8], datab[7..7], dataa[7..7], datab[6..6], dataa[6..6], datab[5..5], dataa[5..5], datab[4..4], dataa[4..4], datab[3..3], dataa[3..3], datab[2..2], dataa[2..2], datab[1..1], dataa[1..1], datab[0..0], dataa[0..0], ((data_wire[80..80] $ data_wire[81..81]) # (data_wire[82..82] $ data_wire[83..83])), ((data_wire[76..76] $ data_wire[77..77]) # (data_wire[78..78] $ data_wire[79..79])), ((data_wire[72..72] $ data_wire[73..73]) # (data_wire[74..74] $ data_wire[75..75])), ((data_wire[68..68] $ data_wire[69..69]) # (data_wire[70..70] $ data_wire[71..71])), ((data_wire[64..64] $ data_wire[65..65]) # (data_wire[66..66] $ data_wire[67..67])), ((data_wire[60..60] $ data_wire[61..61]) # (data_wire[62..62] $ data_wire[63..63])), ((data_wire[56..56] $ data_wire[57..57]) # (data_wire[58..58] $ data_wire[59..59])), ((data_wire[52..52] $ data_wire[53..53]) # (data_wire[54..54] $ data_wire[55..55])), ((data_wire[48..48] $ data_wire[49..49]) # (data_wire[50..50] $ data_wire[51..51])), ((data_wire[44..44] $ data_wire[45..45]) # (data_wire[46..46] $ data_wire[47..47])), ((data_wire[40..40] $ data_wire[41..41]) # (data_wire[42..42] $ data_wire[43..43])), ((data_wire[36..36] $ data_wire[37..37]) # (data_wire[38..38] $ data_wire[39..39])), ((data_wire[32..32] $ data_wire[33..33]) # (data_wire[34..34] $ data_wire[35..35])), ((data_wire[28..28] $ data_wire[29..29]) # (data_wire[30..30] $ data_wire[31..31])), ((data_wire[24..24] $ data_wire[25..25]) # (data_wire[26..26] $ data_wire[27..27])), ((data_wire[20..20] $ data_wire[21..21]) # (data_wire[22..22] $ data_wire[23..23])), ((data_wire[16..16] # data_wire[17..17]) # (data_wire[18..18] # data_wire[19..19])), (((data_wire[12..12] # data_wire[13..13]) # data_wire[14..14]) # data_wire[15..15]), (((data_wire[8..8] # data_wire[9..9]) # data_wire[10..10]) # data_wire[11..11]), (((data_wire[4..4] # data_wire[5..5]) # data_wire[6..6]) # data_wire[7..7]));
	eq_wire = aeb_result_wire[];
END;
--VALID FILE
